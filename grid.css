html {
    box-sizing: border-box;
    font-size: 16px;
    font-family: sans-serif;
    scroll-behavior: smooth;
  }

  *,
  *::after,
  *::before {
    box-sizing: inherit;
  }

  a[href="#top"] {
    margin: 1rem;
    display: block;
    font-size: 2rem;
    text-align: center;
    text-decoration: none;
  }

  p {
    margin: 0;
  }

  h2 {
    margin-top: 50vh;
    text-align: center;
  }

  img {
    margin: auto;
    display: block;
    max-width: 100%;
    height: auto;
  }

  .menu {
    margin-bottom: 100vh;
    font-size: 125%;
  }

  .menu li {
    margin-bottom: 1rem;
  }

  .container {
    margin: 0 auto;
    width: 80%;
    height: 80vh;
    background-color: #222;
    border: medium solid #000;
  }

  .item {
    padding: 1rem;
    font-size: 1.25rem;
    background-color: #666;
    border: medium solid #999;
  }
  /*///////////////////////////////////////////*/
  .grid-explicit {
      display: grid;
      /*Grid de 3cx3r*/
      grid-template-columns: 50% 100px 1fr;  /*fr el espacio sobrante*/
      grid-template-rows: 2rem 20vh 30%;  /*30% del contenedor que tiene 80vh*/

      /*Grid de 5cx4r*/
      grid-template-columns: repeat(5, 20%); /*5 filas, 20% tamaño*/
      grid-template-rows: repeat(4, 25%);

      grid-template-columns: repeat(5, 1fr); /*es proporcional al 20%*/
      grid-template-rows: repeat(4, auto); /*auto se adecua al texto el alto de la fila*/

      grid-template-rows: repeat(4, 1fr); /*1 fr es proporcional a auto*/

      /*Grid de 4cx5r*/
      grid-template-columns: 20% repeat(2,30%) 20%;  /*para aplicar repeat deben continuas*/
      grid-template-rows: repeat(5, auto);

      /*deprecada*/
      grid-row-gap: 1rem;
      grid-column-gap: 2rem;
      grid-gap: 100px 0px;

      row-gap: 1rem;
      column-gap: 2rem;
      gap: 1vh 1vw; /*gap: row column*/
      gap:0;
  }

  .grid-explicit .item:nth-child(10) {
    color: cyan;
    /*posicionar*/
    grid-row-start: 2;
    grid-row-end: 3;
    grid-column-start: 2;
    grid-column-end: 3;

    /*atajo para posicionar */
    grid-row: 2/3; /*grid-area:grid-row-start/grid-row-end */
    grid-column: 3/5; /* grid-area: grid-column-start/grid-column-end*/

    /*otro atajo para posionar */
    /* grid-area: grid-row-start/grid-column-start/grid-row-end/grid-column-end */
    grid-area: 2/3/3/5;
  }

  .grid-explicit .item:nth-child(12) {
    /*posionar con span*/
    color: cyan;
    grid-row: span 2;
    grid-column: span 3;
  }
  .grid-explicit .item:nth-child(15) {
    color: cyan;
    grid-row: 1 / span 2;
    grid-column: 1/ span 2;
  }

  /*si posicionas explicitamente es mejor posicionar todos los elementos 
  para que no tenga comportamiento raro como dejar espacio raros, si dejas que los demas se pocisione el flujo de la grid*/

  .grid-line-names {
      display: grid;
      /*Grid de 3cx3r*/
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(3, 1fr);

      /*crear el GRid com nombres de grid lines --- nombre de linea tamaño*/
      grid-template-columns: [linea-c1] 1fr [linea-c2] 1fr [linea-c3] 1fr [linea-c4];
      grid-template-rows: [linea-r1] 1fr [linea-r2] 1fr [linea-r3] 1fr [linea-r4];

      grid-template-rows: [linea-r1] auto [linea-r2] auto [linea-r3] auto [linea-r4];
  }

  .grid-line-names .item:nth-child(3) {
      color: cyan;
      grid-row: linea-r3 / linea-r4;
      grid-column: linea-c1 / linea-c4;
      /* grid-area: linea-r3 / linea-r4 / linea-c1 / linea-c4; */   /*no funciona grid area con nombres de linea*/
  }

  .grid-areas {
      display: grid;
      /*Grid de 2cx3r*/
      grid-template-columns: 1fr 200px;
      grid-template-rows: 100px repeat(2,1fr) 60px;

      /*posicionamiento con areas*/
      grid-template-areas: 
        "header header"
        "content sidebar"
        "content ." /*  el . dice que esa celda se quede vacio*/
        "footer footer";
  }
  .header {
      grid-area: header; /*crear nombres de areas*/
  }
  .content {
      grid-area: content;
  }
  .sidebar {
      grid-area: sidebar;
  }
  .footer {
      grid-area: footer;
  }

  .grid-implicit {
    /*Grid de 4cx3r*/
    width: 40%;
    display: grid;
    display: inline-grid; /*si queremos tener varios grid en una misma fila*/
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 200px);
  }

  .grid-flow {
    display: grid;
    /*Grid de 5cx3r*/
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(3, 150px);
    grid-auto-flow: row;
    grid-auto-rows: 100px; /*que todas filas generadas implicitamente tengan tamaño 100px, por defecto auto, van con grid-auto-flow: row;*/
    grid-auto-flow: column;
    grid-auto-columns: 50px; /*va con column*/
  }

  .grid-flow-dense{
    display: grid;
    /*Grid de 5cx4r*/
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(4, 200px);
    grid-auto-flow: row dense; /*para que ocupen los espacios vacios acodandose en fila*/
    grid-auto-flow: column dense;
  }

  /*con row dense*/
 /*  .grid-flow-dense .item:nth-child(9) {
    color: cyan;
    grid-row: span 3;
    grid-column: span 3;
  } */
  .grid-flow-dense .item:nth-child(11) {
    color: cyan;
    grid-row: span 3;
    grid-column: span 3;
  }

  .grid-layers {
    display: grid;
    /*Grid de 4cx4r*/
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr)
  }

  .grid-layers .item:nth-child(1){
    background-color: #D5FC68;
    grid-column: 1/3;
    grid-row: 1/3;
  }
  .grid-layers .item:nth-child(2) {
    background-color: #D063AB;
    grid-column: 3/5;
    grid-row: 1/3;
  }
  .grid-layers .item:nth-child(3) {
    background-color: #42E065;
    grid-column: 1/3;
    grid-row: 3/5;
  }
  .grid-layers .item:nth-child(4) {
    background-color: #6888FC;
    grid-column: 3/5;
    grid-row: 3/5;
  }
  .grid-layers .item:nth-child(5) {
    background-color: #F0B41B;
    opacity: .75;
    grid-column: 2/4;
    grid-row: 2/4;
  }

  .grid-order{
    display: grid;
    /*Grid de 3cx2r*/
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
    grid-auto-flow: column;
  }
  .grid-order .item:nth-child(1){
    /*deafult es 0, valores positivos y negativos*/
    order:1;
  }
  .grid-order .item:nth-child(2) {
    /*0,-1,1...*/
    order: 2;
  }
  .grid-order .item:nth-child(5){
    order: -1; /*el order no funciona si posicionamiento con lineas o areas*/
  }